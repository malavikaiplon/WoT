name: Sync Ditto Thing from Config File

on:
  push:
    paths:
      - 'configs/*.json'

jobs:
  recreate-ditto-thing:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # ‚úÖ Full history for diff

      - name: Show Commit Range
        run: echo "Diffing commits:${{ github.event.before }} ‚Üí ${{ github.sha }}"

      - name: Get changed config files
        id: files
        run: |
          CHANGED=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '^configs/.*\.json$' || true)
          echo "CHANGED=$CHANGED" >> $GITHUB_OUTPUT
          echo "Detected changed files: $CHANGED"

      - name: Process each changed config file
        if: steps.files.outputs.CHANGED != ''
        env:
          DITTO_AUTH: ${{ secrets.DITTO_AUTH }}
          DITTO_HOST: ${{ secrets.DITTO_HOST }}
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          for FILE in ${{ steps.files.outputs.CHANGED }}; do
            echo "üì¶ Processing file: $FILE"

            # Derive Thing ID from filename (remove path and .json)
            THING_ID=$(basename "$FILE" .json)
            echo "üÜî Thing ID = $THING_ID"

            # Extract config values
            POLICY_ID=$(jq -r '.policyId' "$FILE")
            ATTRIBUTES=$(jq -c 'del(.policyId)' "$FILE")

            echo "Policy ID: $POLICY_ID"
            echo "Attributes: $ATTRIBUTES"

            # Raw WoT TD definition URL with token
            TD_URL="https://raw.githubusercontent.com/malavikaiplon/WoT/refs/heads/main/FoxESS_inverter/masterthing.json?token=$GH_PAT"

            # Check if thing exists
            STATUS=$(curl -s -o /dev/null -w "%{http_code}" -X GET "$DITTO_HOST/api/2/things/$THING_ID" \
              -H "Authorization: Bearer $DITTO_AUTH")

            if [[ "$STATUS" == "200" ]]; then
              echo "üîÅ Thing [$THING_ID] exists, deleting..."
              DELETE_STATUS=$(curl -s -o /dev/null -w "%{http_code}" -X DELETE "$DITTO_HOST/api/2/things/$THING_ID" \
                -H "Authorization: Bearer $DITTO_AUTH")
              echo "üóëÔ∏è Delete status: $DELETE_STATUS"
            fi

            # Create thing with WoT TD definition
            CREATE_PAYLOAD=$(jq -n \
              --arg pid "$POLICY_ID" \
              --arg def "$TD_URL" \
              '{policyId: $pid, definition: $def}')

            echo "Creating Thing with payload: $CREATE_PAYLOAD"

            CREATE_STATUS=$(curl -s -o /dev/null -w "%{http_code}" -X PUT "$DITTO_HOST/api/2/things/$THING_ID" \
              -H "Authorization: Bearer $DITTO_AUTH" \
              -H "Content-Type: application/json" \
              --data-raw "$CREATE_PAYLOAD")

            if [[ ! "$CREATE_STATUS" =~ ^2 ]]; then
              echo "‚ùå Failed to create Thing [$THING_ID] ‚Äî Status: $CREATE_STATUS"
              exit 1
            fi

            echo "‚úÖ Thing [$THING_ID] created with WoT definition"

            # Patch attributes
            PATCH_STATUS=$(curl -s -o /dev/null -w "%{http_code}" -X PATCH "$DITTO_HOST/api/2/things/$THING_ID" \
              -H "Authorization: Bearer $DITTO_AUTH" \
              -H "Content-Type: application/json" \
              -d "{\"attributes\": $ATTRIBUTES}")

            if [[ "$PATCH_STATUS" =~ ^2 ]]; then
              echo "‚úÖ Attributes patched successfully"
            else
              echo "‚ùå Failed to patch attributes: $PATCH_STATUS"
              exit 1
            fi

          done
